# Destructuring 

## Destructuring struct 
```
fn main() {
	struct Foo{x: (u32, u32), y: u32};

	let foo = Foo{x: (1, 2), y: 4};
	let Foo{x: (a, b), y } = foo;
	println!("a = {}, b = {}", a, b, y);
	
	// you can destruture structs and rename the variables,
	// the order is not important
}
```
## Guards
```
fn main() {
	let pair = (2, -2);
	
	println!("Tell me about {:?}", pair);
	match pair {
		(x, y) if x == y => println!("These are twins")
	}
}
```
# Binding

```
fn age() -> u32 {
	15
}

fn main() {
	println!("Tell me type of person you are");
	
	match age() {
		0 => println!("I'm not born yet I guess"),
		n @1 ... 12 => println!("I'm a child of age {:?}", n),
		n @13 ... 19 => println!("I'm a teen of age {:?}", n),
		n => println!("I'm an old person of age {:?}", n)
	}
}
```
